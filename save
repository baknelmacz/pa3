TEST_CASE("twoDtree::basic ctor render","[weight=1][part=twoDtree]"){
    PNG img;
    img.readFromFile("images/geo.png");

    twoDtree t1(img);

    PNG out = t1.render();

    REQUIRE(out==img);
}


TEST_CASE("twoDtree::basic copy","[weight=1][part=twoDtree]"){
    PNG img;
    img.readFromFile("images/geo.png");

    twoDtree t1(img);
    twoDtree t1copy(t1);

    PNG out = t1copy.render();

    REQUIRE(out==img);
}

TEST_CASE("twoDtree::basic prune","[weight=1][part=twoDtree]"){
    PNG img;
    img.readFromFile("images/ada.png");
    
    twoDtree t1(img); 
    t1.prune(3000);
    PNG result = t1.render();

    PNG expected; 
    expected.readFromFile("images/given-adaPrune.png");

    REQUIRE(expected==result);
}

TEST_CASE("twoDtree::basic pruneSize","[weight=1][part=twoDtree]"){
    PNG img;
    img.readFromFile("images/ada.png");
    
    twoDtree t1(img); 
    int result = t1.pruneSize(3000);

    int expected = 13904;

    REQUIRE(expected==result);
}

TEST_CASE("twoDtree::basic idealPrune","[weight=1][part=twoDtree]"){
    PNG img;
    img.readFromFile("images/ada.png");
    
    twoDtree t1(img); 
    int result = t1.idealPrune(13904);

    int expected = 2998;

    REQUIRE(expected==result);
}
